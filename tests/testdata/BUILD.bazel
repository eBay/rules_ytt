load("@aspect_bazel_lib//lib:tar.bzl", "tar", "mtree_spec")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image")

genrule(
    name = "main_go",
    outs = ["main.go"],
    cmd = """
    cat << EOF >> $@
package main

import "fmt"

func main() {
  fmt.Printf("Hello World!")
}
EOF
""",
)

go_library(
    name = "hello-world_lib",
    srcs = ["main.go"],
    importpath = "github.com/ebay/rules_ytt",
    visibility = ["//visibility:private"],
)

go_binary(
    name = "hello-world",
    embed = [":hello-world_lib"],
    visibility = ["//visibility:public"],
)

tar(
  name = "tar",
  srcs = [":hello-world"],
)

# ERROR: .../rules_ytt/tests/BUILD.bazel:3:4: in ytt rule
# //tests:manifests: target '//tests/testdata:image.digest' is not
# visible from target '//tests:manifests'
package(default_visibility = ["//visibility:public"])

oci_image(
    name = "image",
    base = "@distroless_base",
    entrypoint = ["/tests/testdata/hello-world_/hello-world"],
    tars = [":tar"],
)

exports_files([
  "base.yaml",
  "defaults.yaml",
  "values.yaml",
])
